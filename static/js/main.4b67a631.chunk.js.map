{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","id","email","className","alt","src","Cardlist","CardList","robots","map","user","Fragment","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","this","setState","fontSize","React","Component","App","onSearchChange","e","searchField","target","value","fetch","response","json","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,GAAGC,EAAU,EAAVA,MAEnB,OACI,sBAAKC,UAAY,wDAAjB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAAG,OAA7B,cACrB,gCACI,6BAAKD,IACL,4BAAIE,WCGLI,EAVE,SAAC,GAAY,IACpBC,EADmB,EAAVC,OACSC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBV,KAAMU,EAAKV,KAAMC,GAAIS,EAAKT,GAAIC,MAAOQ,EAAKR,OAAnDQ,EAAKT,OACpD,OACI,cAAC,IAAMU,SAAP,UACKJ,KCOEK,G,MAXG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAChBW,KAAO,SAASC,YAAY,gBAC5BC,SAAUH,QCEJI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAlE,SACKJ,EAAMK,YCcJC,E,kDAhBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,GACdC,KAAKC,SAAS,CAACH,UAAS,M,oBAE5B,WACI,OAAOE,KAAKH,MAAMC,SACd,oBAAIP,MAAO,CAACW,SAAW,QAAvB,yCACJF,KAAKV,MAAMK,a,GAdQQ,IAAMC,WCsClBC,E,kDAhCX,aAAc,IAAD,8BACT,gBAUJC,eAAe,SAACC,GACZ,EAAKN,SAAS,CAACO,YAAYD,EAAEE,OAAOC,SAVpC,EAAKb,MAAM,CACPjB,OAAQ,GACR4B,YAAc,IAJT,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CAA8C9C,MAAK,SAAA+C,GAAQ,OAAIA,EAASC,UAC7EhD,MAAK,SAAA+C,GAAY,EAAKX,SAAS,CAACrB,OAAOgC,S,oBAK5C,WAAS,IAAD,OACEE,EAAiBd,KAAKH,MAAMjB,OAAOmC,QAAQ,SAAAC,GAAK,OAAIA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMW,YAAYS,kBACnH,OAAQjB,KAAKH,MAAMjB,OAAOuC,OAGtB,sBAAK5C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWU,aAAce,KAAKM,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQkC,WAPzB,6C,GAnBKX,IAAMC,WCExBgB,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,SAS1B7D,M","file":"static/js/main.4b67a631.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Card = ({name,id,email}) =>{\r\n    \r\n    return (\r\n        <div className = ' tc bg-light-green dib  br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id+'robo'}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Card from './Card'\r\nconst Cardlist = ({robots})=>{\r\n    const CardList = robots.map(user => <Card key={user.id} name={user.name} id={user.id} email={user.email}/>)\r\n    return (\r\n        <React.Fragment>\r\n            {CardList}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Cardlist","import React from 'react'\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    return(\r\n        <div className='pa2'>\r\n        <input className='pa3 ba b--green bg-lightest-blue'\r\n         type = 'search' placeholder='Search Robots' \r\n         onChange={searchChange}\r\n         />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style = {{overflowY:\"scroll\",border:\"2px solid black\",height:\"800px\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll","import React from 'react'\r\n\r\nclass ErrorBoundry extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        return this.state.hasError ? \r\n            <h1 style={{fontSize : \"2rem\"}}>Oops! Something went wrong!</h1>:\r\n        this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry","import React from 'react'\r\nimport Cardlist from '../components/Cardlist'\r\nimport './App.css'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nclass App extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots :[],\r\n            searchField : ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\r\n        .then(response =>{this.setState({robots:response})})\r\n    }\r\n    onSearchChange=(e)=>{\r\n        this.setState({searchField:e.target.value})\r\n    }\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter( robot => robot.name.toLowerCase().includes(this.state.searchField.toLowerCase()) )\r\n        return !this.state.robots.length?\r\n             <h1>Loading</h1>:\r\n          (\r\n            <div className='tc'>\r\n                <h1>Robofriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                    <Cardlist robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>   ) \r\n    } \r\n    \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './containers/App'\n\n\nReactDOM.render(<App/>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}